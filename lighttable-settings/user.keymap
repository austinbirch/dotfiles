;; User keymap
;; -----------------------------
;; Keymaps are stored as a set of diffs that are merged together together
;; to create the final set of keys. You can modify these diffs to either add
;; or subtract bindings.
;;
;; Like behaviors, keys are bound by tag. When objects with those tags are active
;; the key bindings are live. Keys can be bound to any number of Light Table commands,
;; allowing you the flexibility to execute multiple operations together. To see a list
;; of all the commands you can execute, start typing a word related to the thing you
;; want to do in between the square brackets (e.g. type "editor").

{:+ {:app {"pmeta-t" [:show-commandbar]
           "pmeta-p" [:workspace.show]
           "alt-1" [:tabset.new]
           "alt-tab" [:tabset.next]
           "pmeta-shift-[" [:tabs.prev]
           "pmeta-shift-]" [:tabs.next]}

     :editor {"alt-w" [:editor.watch.watch-selection]
              "alt-shift-w" [:editor.watch.unwatch]
              "alt-enter" [(:paredit.select.parent "(")
                           :eval-editor-form
                           :paredit.select.clear]
              "pmeta-/" [:toggle-comment-selection]
              "pmeta-shift-i" [:editor.doc.toggle]
              "ctrl-c" [:clear-inline-results]
              "pmeta-c" [:editor.copy]
              "pmeta-x" [:editor.cut]
              "pmeta-v" [:editor.paste]
              "pmeta-z" [:editor.undo]
              "pmeta-shift-z" [:editor.redo]
              "pmeta-f" [:vim.find]
              "pmeta-g" [:find.next]
              "pmeta-shift-g" [:find.prev]}

     :editor.keys.vim.normal {"cmd-d" [:editor.doc.toggle]
                              "e" [:toggle-console]
                              "shift-alt-s" [(:paredit.select.parent "(")]
                              "alt-s" [(:paredit.select.parent "(")
                                       :smart-indent-selection
                                       :paredit.select.clear]
                              ">" [:paredit.grow.right]
                              "<" [:paredit.shrink.right]
                              "alt-shift-," [:paredit.shrink.left]
                              "alt-shift-." [:paredit.grow.left]}
     :editor.keys.vim.visual {"(" [:paredit.select.parent]
                              "shift-=" [:smart-indent-selection]}

     :editor.keys.vim.insert {"tab" [:auto-complete]}}}
